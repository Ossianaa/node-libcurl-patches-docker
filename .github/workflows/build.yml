name: Publish curl module

permissions:
  contents: write
  id-token: write

on:
  push:
    tags:
      - v*
env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-x86_64-unknown-linux-gnu:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Build the Docker image
      #   run: docker build . -f Dockerfile-x86_64-unknown-linux-gnu -t curl_x86_64-unknown-linux-gnu

      # - name: Run the Docker container
      #   run: docker run --rm -v /output:/output curl_x86_64-unknown-linux-gnu
      - name: Upload Release Assets
        run: |
          mkdir ./output
          touch ./output/curl_x86_64-unknown-linux-gnu
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: curl_x86_64-unknown-linux-gnu
          path: ./output
  
  release:
    runs-on: ubuntu-latest
    needs: build-x86_64-unknown-linux-gnu

    steps:
      # 检出代码
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          prerelease: false

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: curl_x86_64-unknown-linux-gnu
          path: ./output

      - name: list Release Assets
        run: |
          ls -al
      # - name: Upload Release Assets
      #   run: |
      #     for file in ./output/*; do
      #       gh release upload ${{ github.ref }} $file --clobber
      #     done
        

