name: "Build quic"

on:
  push:
    tags:
      - test*

env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


jobs:
  build:
    strategy:
      matrix:
        settings:
          - host: windows-latest
            build: |
              cd quiche
              cargo build --package quiche --release --target=x86_64-pc-windows-msvc --features ffi,pkg-config-meta,qlog --no-default-features
            target: x86_64-pc-windows-msvc

          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: >-
              cd quiche
              cargo build --package quiche --release --target=x86_64-unknown-linux-gnu --features ffi,pkg-config-meta,qlog --no-default-features

          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: >-
              cd quiche
              set -e &&
              export JEMALLOC_SYS_WITH_LG_PAGE=16 &&
              rustup target add aarch64-unknown-linux-gnu &&
              cargo build --package quiche --release --target=aarch64-unknown-linux-gnu --features ffi,pkg-config-meta,qlog --no-default-features
         
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              cd quiche;
              cargo build --package quiche --release --target=x86_64-apple-darwin --features ffi,pkg-config-meta,qlog --no-default-features;
      
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              cd quiche;
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
              export CC=$(xcrun -f clang);
              export CXX=$(xcrun -f clang++);
              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
              cargo build --package quiche --release --target=aarch64-apple-darwin --features ffi,pkg-config-meta,qlog --no-default-features;
          
    name: "Build"
    runs-on: ${{ matrix.settings.host }}  
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Fetch quiche
        run: |
          git clone -b build-with-curl https://github.com/Ossianaa/quiche
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        if: ${{ !matrix.settings.docker }}
        with:
          targets: ${{ matrix.settings.target }}
      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: -v ${{ env.HOME }}/.cargo/git:/root/.cargo/git -v ${{ env.HOME }}/.cargo/registry:/root/.cargo/registry -v ${{ github.workspace }}:/build -w /build
          run: >-
            ${{ matrix.settings.build }}
      - name: Build
        if: ${{ !matrix.settings.docker }}
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: quiche-${{ matrix.settings.target }}
          path: |
            quiche/target/*
          if-no-files-found: error